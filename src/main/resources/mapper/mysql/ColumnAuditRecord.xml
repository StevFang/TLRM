<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ddmh.mapper.ColumnAuditRecordMapper">
    
    <select id="loadCountBy"
            parameterType="com.ddmh.condition.ColumnAuditRecordCondition"
            resultType="java.lang.Integer">
        select count(1)
        from table_audit_record
        where tlr_id = #{tlrId}
    </select>

    <select id="loadPageListBy"
            parameterType="com.ddmh.condition.ColumnAuditRecordCondition"
            resultType="com.ddmh.dto.ColumnAuditRecordDto">
        select
            id,
            tlr_id as trlId,
            update_meta as updateMeta,
            before,
            after,
            update_sql as updateSql,
            create_on as createOn
        from table_audit_record
        where tlr_id = #{tlrId}
        order by ${sortName} ${order}
        limit #{start}, #{end}
    </select>

    <insert id="save"
            parameterType="com.ddmh.dto.ColumnAuditRecordDto">
        insert into table_audit_record
        (id, tlr_id, update_meta, before, after, update_sql, create_on)
        value
        (#{id}, #{tlrId}, #{updateMeta}, #{before}, #{after}, #{updateSql}, #{createOn});
    </insert>

    <insert id="batchSave"
            parameterType="com.ddmh.dto.ColumnAuditRecordDto">
        insert into table_audit_record
        (id, tlr_id, update_meta, before, after, update_sql, create_on)
        values
        <foreach collection="columnAuditRecordDtoList" item="columnAuditRecordDto" open="(" separator="," close=")">
            #{columnAuditRecordDto.id},
            #{columnAuditRecordDto.tlrId},
            #{columnAuditRecordDto.updateMeta},
            #{columnAuditRecordDto.before},
            #{columnAuditRecordDto.after},
            #{columnAuditRecordDto.updateSql},
            #{columnAuditRecordDto.createOn}
        </foreach>
    </insert>

</mapper>